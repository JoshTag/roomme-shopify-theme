{{ "section-product-package.css" | asset_url | stylesheet_tag }}

{% assign catalog_size = shop.metafields.furniture.category | size %}
{% assign categories = shop.metafields.furniture.category | uniq %}
{% assign furniture_category = shop.metafields.furniture.category %}
{% assign package_categories = product.metafields.catalog.categories.value %}
{% assign package_categories_uniq = product.metafields.catalog.categories.value.categories | uniq %}

<div class="product-package">
  <div class="product-package__filters">
    <div class="product-package__filter-ctn">
      <span class="product-category__">Filter:</span>
      <div id="category-dropdown" class="product-category__dropdown-btn">furniture type</div>
      <div class="product-category__dropdown-ctn">
        <div class="product-category__dropdown-btns">
          <span class="product-category__dropdown-close">close</span><span id="filter-reset">reset</span>
        </div>
        <div>
          {% for item in package_categories %}
            <label class="checkbox">
              <span class="checkbox__input">
                <input type="checkbox" name="furniture-category" value="{{ item.category }}">
                <span class="checkbox__control">
                  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' aria-hidden="true" focusable="false">
                  <path fill='none' stroke='currentColor' stroke-width='3' d='M1.73 12.91l6.37 6.37L22.79 4.59' /></svg>
                </span>
              </span>
              <span class="radio__label">{{ item.category }}</span>
            </label>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
  <form class="product-package__form" method="post" action="/cart/add">
    {% for item in package_categories %}
      {% include 'catalog-category',
        category: item.category,
        quanity: 'choose 1',
        arr_size: catalog_size,
        furniture_category: furniture_category,
        furniture_furniture_code: shop.metafields.furniture.furniture_code,
        furniture_image: shop.metafields.furniture.image,
        furniture_length: shop.metafields.furniture.length,
        furniture_width: shop.metafields.furniture.width,
        furniture_height: shop.metafields.furniture.height,
        furniture_quantity: shop.metafields.furniture.quantity
      %}
    {% endfor %}
    <div class="product-package__order-preview">
      <div class="product-package__order-header">
        <span>{{ product.title | upcase }} - CHOOSE YOUR ITEMS</span>
        <div class="product-package__add-to-cart">
          <input type="hidden" name="id" value="{{ product.variants.first.id }}" />
          <input type="submit" value="continue to checkout &#x2192;" class="product-package__add-to-cart-btn" disabled />
          <p><span id="order-count">0</span>/<span id="category-max"></span></p>
        </div>
      </div>
      <div class="product-package__carousel-ctn">
        <div class="product-package__order-carousel" >
        </div>
      </div>
    </div>
  </form>
</div>

<script>
  let categoryCount = document.querySelectorAll('.product-category');
  document.getElementById('category-max').innerHTML = categoryCount.length;;

  // Package product page form
  const itemSelector = document.querySelectorAll('.catalog-item-selector');


  let ordersArr = [];

  itemSelector.forEach(item => {
    item.addEventListener('change', function() {

      var flkty = new Flickity('.product-package__order-carousel', {
        "freeScroll": true,
        "contain": true,
        "pageDots": false,
        "cellAlign": 'left'
      });
      flkty.destroy();

      const carouselCtn = document.querySelector('.product-package__order-carousel');

      const createOrderCarousel = function(arr) {
        carouselCtn.innerHTML = "";

        arr.forEach(order => {
          let orderItem = document.createElement('div');
          carouselCtn.append(orderItem);
          orderItem.classList.add('product-package__order-item');

          let orderImage = document.createElement('img');
          orderItem.append(orderImage);
          orderImage.classList.add('item-image');
          orderImage.setAttribute('src', order.image);

          let orderTitle = document.createElement('span');
          orderItem.append(orderTitle);
          orderTitle.classList.add('item-category');
          orderTitle.innerHTML = order.code;
        })
      }

      let currentSelection = {
        "category": item.getAttribute('data-furniture-category'),
        "code": item.getAttribute('data-furniture-code'),
        "image": item.getAttribute('data-furniture-img')
      }

      if (ordersArr.some(order => order.category === item.getAttribute('data-furniture-category'))) {
        let index = ordersArr.findIndex(({ category }) => category == currentSelection.category);
        ordersArr[index] = currentSelection;
        createOrderCarousel(ordersArr);
      } else {
        ordersArr.push(currentSelection);
        createOrderCarousel(ordersArr);
      }


      var flkty = new Flickity('.product-package__order-carousel', {
        "freeScroll": true,
        "contain": true,
        "pageDots": false,
        "cellAlign": 'left'
      });

      if (ordersArr.length === categoryCount.length) {
        console.log('true');
        document.querySelector('.product-package__add-to-cart-btn').disabled = false;
      }

      document.getElementById('order-count').innerHTML = ordersArr.length;

    });
  });

  // Product package page filter
  let categoryDropdown = document.getElementById('category-dropdown');
  let dropdownContainer = document.querySelector('.product-category__dropdown-ctn');
  let dropdownClose = document.querySelector('.product-category__dropdown-close');

  categoryDropdown.addEventListener('click', function(){
    if (dropdownContainer.classList.contains('active')) {
      dropdownContainer.classList.remove('active');
    } else {
      dropdownContainer.classList.add('active');
    }
  });

  dropdownClose.addEventListener('click', function() {
    dropdownContainer.classList.remove('active');
  });

  let filterCheckboxes = document.querySelectorAll('input[name="furniture-category"]');

  filterCheckboxes.forEach((item, _, arr) => {
    item.addEventListener('change', function(){
      let checkedBoxes = Array.from(arr).filter(input => input.checked).map(item => item.value);
      let categories = Array.from(arr).map(item => item.value);



      categories.forEach(cat => {
        if(checkedBoxes.includes(cat)) {
          document.querySelectorAll(`[data-catalog-category="${cat}"]`).forEach(cat => {
            cat.style.display = "block"
          })
        } else (
          document.querySelectorAll(`[data-catalog-category="${cat}"]`).forEach(cat => {
            cat.style.display = "none"
          })
        )
      })
    });
  });

  document.getElementById('filter-reset').addEventListener('click', function(){
    document.querySelectorAll('[data-catalog-category]').forEach(element => {
      element.style.display = "block"
    })
    filterCheckboxes.forEach(item => {
      item.checked = false
    })
  })
</script>

{% schema %}
{
  "name": "Packages",
  "blocks": [
    {
      "type": "sofas",
      "name": "Sofas",
      "settings": [
        {
          "type": "text",
          "id": "furniture_code",
          "label": "Furniture code"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Packages"
    }
  ]
}
{% endschema %}
